{
  "name": "@annuadvent/ngx-workspace",
  "version": "1.0.2",
  "private": true,
  "license": "MIT",
  "description": "Angular workspace project that makes it easier to integrate and work with multiple angular library and app projects.",
  "homepage": "https://github.com/sunildivyam/ngx-workspace",
  "bugs": "https://github.com/sunildivyam/ngx-workspace/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/sunildivyam/ngx-workspace.git"
  },
  "engines": {
    "node": "18.17.0",
    "npm": "9.6.7"
  },
  "scripts": {
    "ng": "ng",
    "/**git:modules:sync": "Sync all git submodules",
    "git:modules:sync": "git submodule sync",
    "/**ng:add:lib": "generates a new lib project, provide a param [lib-name]",
    "ng:add:lib": "ng generate library --prefix=anu",
    "/**ng:add:app": "generates a new app project, provide a param [app-name]",
    "ng:add:app": "ng generate application --prefix=app --style=scss --routing=true",
    "/**ng:add:app:ssr": "adds SSR to project app, provide a param [app-name]",
    "ng:add:app:ssr": "ng add @nguniversal/express-engine --project",
    "/**nh:add:module": "Generates all needed files for an angular library module, params: source/path/to/add/module",
    "nh:add:module": "run-func ./node-helpers/lib-transform.service.js createLibModule",
    "/**nh:migrate": "Migrate from older Libs to this workspace, params: Source/path/older-lib  target/path/of/lib/in-this-workspace",
    "nh:migrate": "run-func ./node-helpers/lib-transform.service.js runLibMigration",
    "/**nh:libsinfo": "Creates libs-info.json file, params: array of libNames ngx-core ngx-tools",
    "nh:libsinfo": "run-func ./node-helpers/lib-docs.service.js createAllLibDocsJson",
    "/**nh:libimports": "Creates ts import files for all lib (cmps, cmpData, services), params: array of libNames ngx-core ngx-tools",
    "nh:libimports": "run-func ./node-helpers/lib-docs.service.js createLibDocsImports",
    "/**nh:libsitemaps": "Creates sitemap.xml for routes for all lib resources (cmps, cmpData, services), params: array of libNames ngx-core ngx-tools",
    "nh:libsitemaps": "run-func ./node-helpers/lib-docs.service.js createSitemapXmls",
    "/**nh:libs:prerender:routes": "Creates routes.txt for routes for all lib resources (cmps, cmpData, services), params: array of libNames ngx-core ngx-tools",
    "nh:libs:prerender:routes": "run-func ./node-helpers/lib-docs.service.js createPrerenderRoutes",
    "/**all-libs": "*********all-libs******************",
    "build:all-libs": "npm run build:ngx-common-ui && npm run build:ngx-core && npm run build:ngx-tools && npm run build:ngx-cms  && npm run build:ngx-lib-docs",
    "/**ngx-common-ui": "*********ngx-common-ui******************",
    "build:ngx-common-ui": "ng build ngx-common-ui",
    "watch:ngx-common-ui": "ng build ngx-common-ui --watch",
    "publish:ngx-common-ui": "npm run build:ngx-common-ui && cd dist/ngx-common-ui && npm publish --access public",
    "docs:ngx-common-ui": "compodoc -p projects/ngx-common-ui/tsconfig.doc.json -e json -d projects/ngx-ssr-libdocs-app/src/assets/ngx-common-ui",
    "/**ngx-core": "*********ngx-core******************",
    "build:ngx-core": "ng build ngx-core",
    "watch:ngx-core": "ng build ngx-core --watch",
    "publish:ngx-core": "npm run build:ngx-core && cd dist/ngx-core && npm publish --access public",
    "docs:ngx-core": "compodoc -p projects/ngx-core/tsconfig.doc.json -e json -d projects/ngx-ssr-libdocs-app/src/assets/ngx-core",
    "/**ngx-tools": "*********ngx-tools******************",
    "build:ngx-tools": "ng build ngx-tools",
    "watch:ngx-tools": "ng build ngx-tools --watch",
    "publish:ngx-tools": "npm run build:ngx-tools && cd dist/ngx-tools && npm publish --access public",
    "docs:ngx-tools": "compodoc -p projects/ngx-tools/tsconfig.doc.json -e json -d projects/ngx-ssr-libdocs-app/src/assets/ngx-tools",
    "/**ngx-cms": "*********ngx-cms******************",
    "build:ngx-cms": "ng build ngx-cms",
    "watch:ngx-cms": "ng build ngx-cms --watch",
    "publish:ngx-cms": "npm run build:ngx-cms && cd dist/ngx-cms && npm publish --access public",
    "docs:ngx-cms": "compodoc -p projects/ngx-cms/tsconfig.doc.json -e json -d projects/ngx-ssr-libdocs-app/src/assets/ngx-cms",
    "/**ngx-lib-docs": "*********ngx-lib-docs******************",
    "build:ngx-lib-docs": "ng build ngx-lib-docs",
    "watch:ngx-lib-docs": "ng build ngx-lib-docs --watch",
    "publish:ngx-lib-docs": "npm run build:ngx-lib-docs && cd dist/ngx-lib-docs && npm publish --access public",
    "docs:ngx-lib-docs": "compodoc -p projects/ngx-lib-docs/tsconfig.doc.json -e json -d projects/ngx-ssr-libdocs-app/src/assets/ngx-lib-docs",
    "/**ngx-ssr-app": "*********ngx-ssr-app******************",
    "test:ngx-ssr-app": "ng test",
    "start/**ngx-ssr-app": "------------------------------------",
    "start:ngx-ssr-app:development": "ng serve --configuration development --project ngx-ssr-app",
    "start:ngx-ssr-app:staging": "ng serve --configuration staging --project ngx-ssr-app",
    "start:ngx-ssr-app:production": "ng serve --configuration production --project ngx-ssr-app",
    "build/**ngx-ssr-app": "------------------------------------",
    "build:ngx-ssr-app:development": "ng build --configuration development --project ngx-ssr-app",
    "build:ngx-ssr-app:staging": "ng build --configuration staging --project ngx-ssr-app",
    "build:ngx-ssr-app:production": "ng build --configuration production --project ngx-ssr-app",
    "watch/**ngx-ssr-app": "------------------------------------",
    "watch:ngx-ssr-app:development": "ng build --configuration development --watch --project ngx-ssr-app",
    "watch:ngx-ssr-app:staging": "ng build --configuration staging --watch --project ngx-ssr-app",
    "watch:ngx-ssr-app:production": "ng build --configuration production --watch --project ngx-ssr-app",
    "dev:ssr/**ngx-ssr-app": "------------------------------------",
    "dev:ssr:ngx-ssr-app:development": "ng run ngx-ssr-app:serve-ssr:development",
    "dev:ssr:ngx-ssr-app:staging": "ng run ngx-ssr-app:serve-ssr:staging",
    "dev:ssr:ngx-ssr-app:production": "ng run ngx-ssr-app:serve-ssr:production",
    "build:ssr/**ngx-ssr-app": "------------------------------------",
    "build:ssr:ngx-ssr-app:development": "npm run build:ngx-ssr-app:development && ng run ngx-ssr-app:server:development",
    "build:ssr:ngx-ssr-app:staging": "npm run build:ngx-ssr-app:staging && ng run ngx-ssr-app:server:staging",
    "build:ssr:ngx-ssr-app:production": "npm run build:ngx-ssr-app:production && ng run ngx-ssr-app:server:production",
    "serve:ssr/**ngx-ssr-app": "------------------------------------",
    "serve:ssr:ngx-ssr-app:development": "npm run build:ssr:ngx-ssr-app:development && node dist/ngx-ssr-app/server/main.js",
    "serve:ssr:ngx-ssr-app:staging": "npm run build:ssr:ngx-ssr-app:staging && node dist/ngx-ssr-app/server/main.js",
    "serve:ssr:ngx-ssr-app:production": "npm run build:ssr:ngx-ssr-app:production && node dist/ngx-ssr-app/server/main.js",
    "prerender/**ngx-ssr-app": "------------------------------------",
    "prerender:ngx-ssr-app:development": "ng run ngx-ssr-app:prerender:development",
    "prerender:ngx-ssr-app:staging": "ng run ngx-ssr-app:prerender:staging",
    "prerender:ngx-ssr-app:production": "ng run ngx-ssr-app:prerender:production",
    "firebase:build/**ngx-ssr-app": "------------------------------------",
    "firebase:copy:build:ngx-ssr-app": "del-cli --force projects/ngx-ssr-app/firebase-setup/functions/dist/ngx-ssr-app && cpy dist/ngx-ssr-app projects/ngx-ssr-app/firebase-setup/functions",
    "firebase:build:ngx-ssr-app:development": "npm run build:ssr:ngx-ssr-app:development && npm run firebase:copy:build:ngx-ssr-app",
    "firebase:build:ngx-ssr-app:staging": "npm run build:ssr:ngx-ssr-app:staging && npm run firebase:copy:build:ngx-ssr-app",
    "firebase:build:ngx-ssr-app:production": "npm run build:ssr:ngx-ssr-app:production && npm run firebase:copy:build:ngx-ssr-app",
    "firebase:serve/**ngx-ssr-app": "------------------------------------",
    "firebase:serve:ngx-ssr-app:development": "npm run firebase:build:ngx-ssr-app:development && cd projects/ngx-ssr-app/firebase-setup && firebase use staging && firebase serve",
    "firebase:serve:ngx-ssr-app:staging": "npm run firebase:build:ngx-ssr-app:staging && cd projects/ngx-ssr-app/firebase-setup && firebase use staging && firebase serve",
    "firebase:serve:ngx-ssr-app:production": "npm run firebase:build:ngx-ssr-app:production && cd projects/ngx-ssr-app/firebase-setup && firebase use production && firebase serve",
    "firebase:deploy/**ngx-ssr-app": "------------------------------------",
    "firebase:deploy:ngx-ssr-app:staging": "npm run firebase:build:ngx-ssr-app:staging && cd projects/ngx-ssr-app/firebase-setup && firebase deploy --except hosting -P staging",
    "firebase:deploy:ngx-ssr-app:production": "npm run firebase:build:ngx-ssr-app:production && cd projects/ngx-ssr-app/firebase-setup && firebase deploy --except hosting -P production",
    "firebase:deploy:hosting:ngx-ssr-app:staging": "cd projects/ngx-ssr-app/firebase-setup && firebase deploy --only hosting:staging -P staging",
    "firebase:deploy:hosting:ngx-ssr-app:production": "cd projects/ngx-ssr-app/firebase-setup && firebase deploy --only hosting:production -P production",
    "firebase:list:indexes/**ngx-ssr-app": "------------------------------------",
    "firebase:list:indexes:ngx-ssr-app:staging": "cd projects/ngx-ssr-app/firebase-setup && firebase firestore:indexes -P staging",
    "firebase:list:indexes:ngx-ssr-app:production": "cd projects/ngx-ssr-app/firebase-setup && firebase firestore:indexes -P production",
    "/**ngx-ssr-libdocs-app": "*********ngx-ssr-libdocs-app******************",
    "test:ngx-ssr-libdocs-app": "ng test",
    "start/**ngx-ssr-libdocs-app": "------------------------------------",
    "start:ngx-ssr-libdocs-app:development": "ng serve --configuration development --project ngx-ssr-libdocs-app",
    "start:ngx-ssr-libdocs-app:staging": "ng serve --configuration staging --project ngx-ssr-libdocs-app",
    "start:ngx-ssr-libdocs-app:production": "ng serve --configuration production --project ngx-ssr-libdocs-app",
    "build/**ngx-ssr-libdocs-app": "------------------------------------",
    "build:ngx-ssr-libdocs-app:development": "ng build --configuration development --project ngx-ssr-libdocs-app",
    "build:ngx-ssr-libdocs-app:staging": "ng build --configuration staging --project ngx-ssr-libdocs-app",
    "build:ngx-ssr-libdocs-app:production": "ng build --configuration production --project ngx-ssr-libdocs-app",
    "watch/**ngx-ssr-libdocs-app": "------------------------------------",
    "watch:ngx-ssr-libdocs-app:development": "ng build --configuration development --watch --project ngx-ssr-libdocs-app",
    "watch:ngx-ssr-libdocs-app:staging": "ng build --configuration staging --watch --project ngx-ssr-libdocs-app",
    "watch:ngx-ssr-libdocs-app:production": "ng build --configuration production --watch --project ngx-ssr-libdocs-app",
    "dev:ssr/**ngx-ssr-libdocs-app": "------------------------------------",
    "dev:ssr:ngx-ssr-libdocs-app:development": "ng run ngx-ssr-libdocs-app:serve-ssr:development",
    "dev:ssr:ngx-ssr-libdocs-app:staging": "ng run ngx-ssr-libdocs-app:serve-ssr:staging",
    "dev:ssr:ngx-ssr-libdocs-app:production": "ng run ngx-ssr-libdocs-app:serve-ssr:production",
    "build:ssr/**ngx-ssr-libdocs-app": "------------------------------------",
    "build:ssr:ngx-ssr-libdocs-app:development": "npm run build:ngx-ssr-libdocs-app:development && ng run ngx-ssr-libdocs-app:server:development",
    "build:ssr:ngx-ssr-libdocs-app:staging": "npm run build:ngx-ssr-libdocs-app:staging && ng run ngx-ssr-libdocs-app:server:staging",
    "build:ssr:ngx-ssr-libdocs-app:production": "npm run build:ngx-ssr-libdocs-app:production && ng run ngx-ssr-libdocs-app:server:production",
    "serve:ssr/**ngx-ssr-libdocs-app": "------------------------------------",
    "serve:ssr:ngx-ssr-libdocs-app:development": "npm run build:ssr:ngx-ssr-libdocs-app:development && node dist/ngx-ssr-libdocs-app/server/main.js",
    "serve:ssr:ngx-ssr-libdocs-app:staging": "npm run build:ssr:ngx-ssr-libdocs-app:staging && node dist/ngx-ssr-libdocs-app/server/main.js",
    "serve:ssr:ngx-ssr-libdocs-app:production": "npm run build:ssr:ngx-ssr-libdocs-app:production && node dist/ngx-ssr-libdocs-app/server/main.js",
    "prerender/**ngx-ssr-libdocs-app": "------------------------------------",
    "prerender:ngx-ssr-libdocs-app:development": "npm run nh:libs:prerender:routes ngx-common-ui ngx-cms ngx-core ngx-tools && ng run ngx-ssr-libdocs-app:prerender:development --routes-file projects/ngx-ssr-libdocs-app/src/prerender-routes/routes.txt",
    "prerender:ngx-ssr-libdocs-app:staging": "npm run nh:libs:prerender:routes ngx-common-ui ngx-cms ngx-core ngx-tools && ng run ngx-ssr-libdocs-app:prerender:staging --routes-file projects/ngx-ssr-libdocs-app/src/prerender-routes/routes.txt",
    "prerender:ngx-ssr-libdocs-app:production": "npm run nh:libs:prerender:routes ngx-common-ui ngx-cms ngx-core ngx-tools && ng run ngx-ssr-libdocs-app:prerender:production --routes-file projects/ngx-ssr-libdocs-app/src/prerender-routes/routes.txt",
    "firebase:build/**ngx-ssr-libdocs-app": "------------------------------------",
    "firebase:copy:build:ngx-ssr-libdocs-app": "del-cli --force projects/ngx-ssr-libdocs-app/firebase-setup/functions/dist/ngx-ssr-libdocs-app && cpy dist/ngx-ssr-libdocs-app projects/ngx-ssr-libdocs-app/firebase-setup/functions",
    "firebase:build:ngx-ssr-libdocs-app:development": "npm run build:ssr:ngx-ssr-libdocs-app:development && npm run firebase:copy:build:ngx-ssr-libdocs-app",
    "firebase:build:ngx-ssr-libdocs-app:staging": "npm run build:ssr:ngx-ssr-libdocs-app:staging && npm run firebase:copy:build:ngx-ssr-libdocs-app",
    "firebase:build:ngx-ssr-libdocs-app:production": "npm run build:ssr:ngx-ssr-libdocs-app:production && npm run firebase:copy:build:ngx-ssr-libdocs-app",
    "firebase:serve/**ngx-ssr-libdocs-app": "------------------------------------",
    "firebase:serve:ngx-ssr-libdocs-app:development": "npm run firebase:build:ngx-ssr-libdocs-app:development && cd projects/ngx-ssr-libdocs-app/firebase-setup && firebase use staging && firebase serve",
    "firebase:serve:ngx-ssr-libdocs-app:staging": "npm run firebase:build:ngx-ssr-libdocs-app:staging && cd projects/ngx-ssr-libdocs-app/firebase-setup && firebase use staging && firebase serve",
    "firebase:serve:ngx-ssr-libdocs-app:production": "npm run firebase:build:ngx-ssr-libdocs-app:production && cd projects/ngx-ssr-libdocs-app/firebase-setup && firebase use production && firebase serve",
    "firebase:deploy/**ngx-ssr-libdocs-app": "------------------------------------",
    "firebase:deploy:hosting:ngx-ssr-libdocs-app:staging": "npm run firebase:build:ngx-ssr-libdocs-app:staging && cd projects/ngx-ssr-libdocs-app/firebase-setup && firebase deploy --only hosting:staging -P staging",
    "firebase:deploy:hosting:ngx-ssr-libdocs-app:production": "npm run firebase:build:ngx-ssr-libdocs-app:production && cd projects/ngx-ssr-libdocs-app/firebase-setup && firebase deploy --only hosting:production -P production",
    "docs/**ngx-ssr-libdocs-app": "------------------------------------",
    "docs:ngx-ssr-libdocs-app": "npm run nh:libsinfo ngx-common-ui ngx-cms ngx-core ngx-tools && npm run docs:ngx-common-ui && npm run docs:ngx-core && npm run docs:ngx-tools && npm run docs:ngx-cms",
    "docs:imports/**ngx-ssr-libdocs-app": "------------------------------------",
    "docs:imports:ngx-ssr-libdocs-app": "npm run nh:libimports ngx-common-ui ngx-cms ngx-core ngx-tools",
    "docs:sitemap/**ngx-ssr-libdocs-app": "------------------------------------",
    "docs:sitemap:ngx-ssr-libdocs-app": "npm run nh:libsitemaps ngx-common-ui ngx-cms ngx-core ngx-tools",
    "/**ngx-ssr-infoverse-app": "*********ngx-ssr-infoverse-app******************",
    "test:ngx-ssr-infoverse-app": "ng test",
    "start/**ngx-ssr-infoverse-app": "------------------------------------",
    "start:ngx-ssr-infoverse-app:development": "ng serve --configuration development --project ngx-ssr-infoverse-app",
    "start:ngx-ssr-infoverse-app:staging": "ng serve --configuration staging --project ngx-ssr-infoverse-app",
    "start:ngx-ssr-infoverse-app:production": "ng serve --configuration production --project ngx-ssr-infoverse-app",
    "build/**ngx-ssr-infoverse-app": "------------------------------------",
    "build:ngx-ssr-infoverse-app:development": "ng build --configuration development --project ngx-ssr-infoverse-app",
    "build:ngx-ssr-infoverse-app:staging": "ng build --configuration staging --project ngx-ssr-infoverse-app",
    "build:ngx-ssr-infoverse-app:production": "ng build --configuration production --project ngx-ssr-infoverse-app",
    "watch/**ngx-ssr-infoverse-app": "------------------------------------",
    "watch:ngx-ssr-infoverse-app:development": "ng build --configuration development --watch --project ngx-ssr-infoverse-app",
    "watch:ngx-ssr-infoverse-app:staging": "ng build --configuration staging --watch --project ngx-ssr-infoverse-app",
    "watch:ngx-ssr-infoverse-app:production": "ng build --configuration production --watch --project ngx-ssr-infoverse-app",
    "dev:ssr/**ngx-ssr-infoverse-app": "------------------------------------",
    "dev:ssr:ngx-ssr-infoverse-app:development": "ng run ngx-ssr-infoverse-app:serve-ssr:development",
    "dev:ssr:ngx-ssr-infoverse-app:staging": "ng run ngx-ssr-infoverse-app:serve-ssr:staging",
    "dev:ssr:ngx-ssr-infoverse-app:production": "ng run ngx-ssr-infoverse-app:serve-ssr:production",
    "build:ssr/**ngx-ssr-infoverse-app": "------------------------------------",
    "build:ssr:ngx-ssr-infoverse-app:development": "npm run build:ngx-ssr-infoverse-app:development && ng run ngx-ssr-infoverse-app:server:development",
    "build:ssr:ngx-ssr-infoverse-app:staging": "npm run build:ngx-ssr-infoverse-app:staging && ng run ngx-ssr-infoverse-app:server:staging",
    "build:ssr:ngx-ssr-infoverse-app:production": "npm run build:ngx-ssr-infoverse-app:production && ng run ngx-ssr-infoverse-app:server:production",
    "serve:ssr/**ngx-ssr-infoverse-app": "------------------------------------",
    "serve:ssr:ngx-ssr-infoverse-app:development": "npm run build:ssr:ngx-ssr-infoverse-app:development && node dist/ngx-ssr-infoverse-app/server/main.js",
    "serve:ssr:ngx-ssr-infoverse-app:staging": "npm run build:ssr:ngx-ssr-infoverse-app:staging && node dist/ngx-ssr-infoverse-app/server/main.js",
    "serve:ssr:ngx-ssr-infoverse-app:production": "npm run build:ssr:ngx-ssr-infoverse-app:production && node dist/ngx-ssr-infoverse-app/server/main.js",
    "prerender/**ngx-ssr-infoverse-app": "------------------------------------",
    "prerender:ngx-ssr-infoverse-app:development": "ng run ngx-ssr-infoverse-app:prerender:development",
    "prerender:ngx-ssr-infoverse-app:staging": "ng run ngx-ssr-infoverse-app:prerender:staging",
    "prerender:ngx-ssr-infoverse-app:production": "ng run ngx-ssr-infoverse-app:prerender:production",
    "firebase:build/**ngx-ssr-infoverse-app": "------------------------------------",
    "firebase:copy:build:ngx-ssr-infoverse-app": "del-cli --force projects/ngx-ssr-infoverse-app/firebase-setup/functions/dist/ngx-ssr-infoverse-app && cpy dist/ngx-ssr-infoverse-app projects/ngx-ssr-infoverse-app/firebase-setup/functions",
    "firebase:build:ngx-ssr-infoverse-app:development": "npm run build:ssr:ngx-ssr-infoverse-app:development && npm run firebase:copy:build:ngx-ssr-infoverse-app",
    "firebase:build:ngx-ssr-infoverse-app:staging": "npm run build:ssr:ngx-ssr-infoverse-app:staging && npm run firebase:copy:build:ngx-ssr-infoverse-app",
    "firebase:build:ngx-ssr-infoverse-app:production": "npm run build:ssr:ngx-ssr-infoverse-app:production && npm run firebase:copy:build:ngx-ssr-infoverse-app",
    "firebase:serve/**ngx-ssr-infoverse-app": "------------------------------------",
    "firebase:serve:ngx-ssr-infoverse-app:development": "npm run firebase:build:ngx-ssr-infoverse-app:development && cd projects/ngx-ssr-infoverse-app/firebase-setup && firebase use staging && firebase serve",
    "firebase:serve:ngx-ssr-infoverse-app:staging": "npm run firebase:build:ngx-ssr-infoverse-app:staging && cd projects/ngx-ssr-infoverse-app/firebase-setup && firebase use staging && firebase serve",
    "firebase:serve:ngx-ssr-infoverse-app:production": "npm run firebase:build:ngx-ssr-infoverse-app:production && cd projects/ngx-ssr-infoverse-app/firebase-setup && firebase use production && firebase serve",
    "firebase:deploy/**ngx-ssr-infoverse-app": "------------------------------------",
    "firebase:deploy:ngx-ssr-infoverse-app:staging": "npm run firebase:build:ngx-ssr-infoverse-app:staging && cd projects/ngx-ssr-infoverse-app/firebase-setup && firebase deploy --except hosting -P staging",
    "firebase:deploy:ngx-ssr-infoverse-app:production": "npm run firebase:build:ngx-ssr-infoverse-app:production && cd projects/ngx-ssr-infoverse-app/firebase-setup && firebase deploy --except hosting -P production",
    "firebase:deploy:hosting:ngx-ssr-infoverse-app:staging": "cd projects/ngx-ssr-infoverse-app/firebase-setup && firebase deploy --only hosting:staging -P staging",
    "firebase:deploy:hosting:ngx-ssr-infoverse-app:production": "cd projects/ngx-ssr-infoverse-app/firebase-setup && firebase deploy --only hosting:production -P production",
    "firebase:list:indexes/**ngx-ssr-infoverse-app": "------------------------------------",
    "firebase:list:indexes:ngx-ssr-infoverse-app:staging": "cd projects/ngx-ssr-infoverse-app/firebase-setup && firebase firestore:indexes -P staging",
    "firebase:list:indexes:ngx-ssr-infoverse-app:production": "cd projects/ngx-ssr-infoverse-app/firebase-setup && firebase firestore:indexes -P production"
  },
  "dependencies": {
    "@angular/animations": "16.1.0",
    "@angular/common": "16.1.0",
    "@angular/compiler": "16.1.0",
    "@angular/core": "16.1.0",
    "@angular/forms": "16.1.0",
    "@angular/platform-browser": "16.1.0",
    "@angular/platform-browser-dynamic": "16.1.0",
    "@angular/platform-server": "16.1.0",
    "@angular/router": "16.1.0",
    "@annuadvent/ngx-cms": "^1.0.2",
    "@annuadvent/ngx-common-ui": "^1.0.2",
    "@annuadvent/ngx-core": "^1.0.2",
    "@annuadvent/ngx-lib-docs": "^1.0.2",
    "@annuadvent/ngx-tools": "^1.0.2",
    "@nguniversal/express-engine": "^16.1.0",
    "compressorjs": "^1.2.1",
    "express": "^4.15.2",
    "firebase": "^9.23.0",
    "firebase-admin": "^11.9.0",
    "firebase-functions": "^4.4.1",
    "firebaseui": "^6.0.2",
    "openai": "^3.3.0",
    "prismjs": "^1.29.0",
    "rxjs": "~7.8.0",
    "showdown": "^2.1.0",
    "stream-browserify": "^3.0.0",
    "tslib": "^2.3.0",
    "xml-js": "^1.6.11",
    "zone.js": "~0.13.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "16.1.0",
    "@angular/cli": "16.1.0",
    "@angular/compiler-cli": "16.1.0",
    "@compodoc/compodoc": "^1.1.21",
    "@nguniversal/builders": "^16.1.0",
    "@types/express": "^4.17.0",
    "@types/jasmine": "~4.3.0",
    "@types/node": "^16.11.7",
    "cpy-cli": "^5.0.0",
    "del-cli": "^5.0.0",
    "firebase-functions-test": "^3.1.0",
    "firebase-tools": "^12.4.7",
    "jasmine-core": "~4.6.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.1.0",
    "ng-packagr": "16.1.0",
    "run-func": "^3.0.0",
    "typescript": "~5.1.3"
  }
}
